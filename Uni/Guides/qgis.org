#+TITLE: Qgis

* General
** confiuration
*** open attrib table in dock

#+DOWNLOADED: /tmp/screenshot.png @ 2015-02-04 12:04:37
#+attr_html: :width 300px

check the tick box in the setting > data source dialog
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-02-04_12:04:37.png]]

** tips and glossary
**** gllosary

*Geocoding*
 a GIS layer that translates addresses to coordinates

**** xy longitude and latitude

*X*Longitude (shown as a vertical line) is the angular distance, in
degrees, minutes, and seconds, of a point east or west of the Prime
(Greenwich) Meridian. Lines of longitude are often referred to as
meridians.
 *Y-*Latitude (shown as a horizontal line) is the angular distance, in
degrees, minutes, and seconds of a point north or south of the Equator.
Lines of latitude are often referred to as parallels.

 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_VC2z3xSSNWreaVdlPj4SnQ_0002.png]]

**** projections and coordinate systems
***** 1)projections and coordinate systems

*Projections and Coordinate Systems
**Types of coordinate systems*
 There are two common types of coordinate systems used in GIS:
 *1)GCS:*
 A global or spherical coordinate system such as latitude--longitude.
 These are often referred to as geographic coordinate systems *(GCS)
*is often obtained in Decimal degrees such as x: -70.05 y: 42.15*
*GCS is used for large areas and worldwide*
*
 you will see in GIS when an layer is using GCS that the units are in
decimal degrees
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_guoO7G6AekzekVC-HwsUpw_0001.png]]
 *
 2)PCS:*
 A Pojected coordinate system *(PC*S) is based on GCS.
 it has bigger numbers sometimes such as :
 it involves a map projection such as transverse Mercator, Albers equal
area, or Robinson, all of which (along with numerous other map
projection models) provide various mechanisms to project maps of the
earth's spherical surface onto a two-dimensional Cartesian coordinate
plane. Projected coordinate systems are sometimes referred to as map
projections.
 PCS is used for states, countries etc.
 you will see in GIS when an layer is using PCS that the units are in
meters/km etc..
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_guoO7G6AekzekVC-HwsUpw_0002.png]]

***** 2)order of using: define first and then reproject

when dealing with projections you have to keep this in mind:
 1)*FIRST* you need to define the coordinante if missing (GCS). this is
common when getting x,y cords in db files or rasters etc..
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_xyUw0VyI5kOAsxCgL18WFQ_0001.jpg]]
 2)*then*you can reporoject to any PGS system such as UTM etc.

***** 3)converting between projections

converting between different PCS is an important part in order to get
all the layers to be projected similalrly
 after you decide which projection to use and type (UTM,NAD etc..) you
use the reproject tool:
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_vJ2w1YCvUqi0gimOxa673g_0001.png]]
 then deifne the layer to be projected (to the one you decide to use)
and the output file
 NOTE: in some cases you will need to use a transformation
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_vJ2w1YCvUqi0gimOxa673g_0002.png]]
 the file should now be reprojected

***** fix a offsetted coord system

[[~/Documents/My Dropbox/Org/Uni/Guides/ARCGIS_files/attach/steve_melly_cord_fix_adjusted.xlsx][Attachment #01
(steve\_melly\_cord\_fix\_adjusted.xlsx)]]
 if you have a layer/shapefile that moved a bit from the true location
you can use the following method to get it approximately back in place
 *In example:*
 bellow the grey raster is the original location and the green raster is
the raster that has been shifted to the left and bottom by a bit
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0006.png]] to
[[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0007.png]]
 *to solve this:*
 use a correct layer/file to base your correction on. open the layer
properties and extract the info such as cell size and
e[[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0008.png]]xtent:
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0009.png]]
 and
 then take a sample point/grid in the shifted layer:
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0010.png]]
 and mark down the X,Y of that point
 then using a math application (like excel) start calculating the
differences *(see attachment)*
 for *X1*use the Left extent of the original layer plus the cell size
divided by 2:
 -108.90066788+0.012048575/2
 for *Y1* use the Bottom extent of the original layer plus the cell size
divided by 2:
 29.9993652723+0.012048575/2
 for *X2* and *Y2* take the X,Y of the sample point
 We then calcualte the diff between X2 and X1 and devide it by the cell
size of the original layer (0.012048575)
 the rest are other calculation that can be seen in the attached file
***** Israel projection
http://tx.technion.ac.il/~zvikabh/software/ITM/

%Tip (the above link also has an online calulator from DD to ITM)%

The standard coordinate grid in Israel is called `Israel Transverse Mercator` (ITM), and is sometimes informally referred to as the "new Israel grid" (רשת ישראל חדשה). This grid appears in detailed maps of Israel. Nonetheless, the older and less accurate Israel Cassini Soldner (ICS) grid or "old Israel grid" (רשת ישראל ישנה) is also still used in many places. For example, despite the official adoption of ITM in 1994, the ICS grid is still displayed more prominently in Israeli hiking maps (מפות סימון שבילים) and is consequently more commonly used by hikers.

The ITM grid is a transverse Mercator projection, meaning that the surface of the earth is projected onto a cylinder whose axis of symmetry is parallel to the equator. This provides an accurate projection along a longitudinal slice of the earth, with the inaccuracy increasing as one moves away from this axis. Thus, for example, the Universal Transverse Mercator (UTM) grid divides the earth into 60 longitudinal slices, each projected separately. Since Israel is a narrow country, whose span from east to west barely exceeds 100 kilometers, a single projection is sufficient for accurately representing the entire area. 

** install 
*** install on debian

Packages for Debian Wheezy, Jessie and Unstable for i386 and amd64 are available at:

#+BEGIN_EXAMPLE
Wheezy (7.x):

deb     http://qgis.org/debian wheezy main
deb-src http://qgis.org/debian wheezy main

Jessie (8.x; testing, not yet released):

deb     http://qgis.org/debian jessie main
deb-src http://qgis.org/debian jessie main

Unstable:

deb     http://qgis.org/debian sid main
deb-src http://qgis.org/debian sid main
#+END_EXAMPLE

To add the the http://qgis.org repository public key to your apt keyring, type:

#+BEGIN_SRC sh
gpg --recv-key DD45F6C3
gpg --export --armor DD45F6C3 | sudo apt-key add -
#+END_SRC

Then add the lines for one of the repositories to your /etc/apt/sources.list file (see below to choose the appropriate one) and type:

#+BEGIN_SRC sh
sudo apt-get update
sudo apt-get install qgis python-qgis qgis-plugin-grass
#+END_SRC

** Vector
*** How to make Voronoi Polygons?

First, add a vector layer, and choose an shape file with your points.

Then, click on "vector", scroll down to "geometry tools", and then click on "voronoi polygons"

A window will then pop-up and you will need to save this polygon. You will need to click browse, name the file and save.

It will then ask you, if you would like to add the new layer to the TOC?, and click yes.

Click cancel

You will then need to drag your points from your layers section to the top of the layer list.

ALL DONE!
*** clipping

Use the Vector -> Geoprocessing -> Clip tool

Input is your roads layer, clip layer is the polygon layer.

$Note- make sure they the same projection$ 
*** spatial join
$Note- make sure they the same projection$ 
Your project should now have two layers in the EPSG:2333 projection -- Taiwan_CARMA and TW_POP_NEW.
We can now proceed to use the JOIN ON LOCATION function (aka SPATIAL JOIN)
Go to menu VECTOR | DATA MANAGEMENT TOOLS | JOIN ATTRIBUTES BY LOCATION
Set the TARGET LAYER = Taiwan_CARMA_Xian80.shp, set the JOIN LAYER = TW_POP_NEW
Click on the OUTPUT SHAPEFILE BROWSE button to set output location and filename, like: "test_join", and set encoding = big5, then click SAVE
Click OK and you will be prompted to add the new join shapefile to the TOC (table of contents), click YES
Open the Attribute Table of the new join layer, "test_join." Scroll to the right, and you should now see that the all the columns from the TW_POP_NEW layer have been added to the table, and each point feature now includes the attributes for the polygon that the point was located in.
*** Cut/Split a polygon feature with a digitized line in QGIS
%Tip-it's important to start and end your splitting line outside of the target layer%

Start QGIS 2.0. Load and display a vector layer e.g. mask.shp.

Select View | Toolbars. Toggle on Advanced Digitizing.

The Advanced Digitizing tool bar is displayed.

In the Layers pane, select the polygon layer. Then select Layer | Toggle Editing.

The polygon layer is enabled for editing.
Click the Split Feature icon.

Digitize a line over a polygon feature.

#+DOWNLOADED: /tmp/screenshot.png @ 2015-02-19 09:05:02
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-02-19_09:05:02.png]]s

Right click to complete the line.

The polygon feature is divided into parts according to the digitized line.


#+DOWNLOADED: /tmp/screenshot.png @ 2015-02-19 09:05:13
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-02-19_09:05:13.png]]

To make the change permanent, toggle off Editing mode.

*** calculate percent of intersecting polygons (for exposure calucluations for SSA etc)
I used intersect from geoprocessing tools, worked fine
then I created a new field calcualting the area of each new polygon ($area)
finally I created a new field calculating the portion of the area of the new polygon from the area of the CT it belongs to (the last 2 fields of the layer). Then I export to csv and from there to R and use this % to weight this grid point when building the weighted average for each census tract. 
** selection
*** select by expression
**** select squares above X size
#+BEGIN_EXAMPLE
$area / $perimeter > 400
#other example
abs(($perimeter / 4) - sqrt($area)) < 22
#+END_EXAMPLE

** Expressions
*** base
QGIS has some support for parsing of SQL-like expressions. Only a small subset of SQL syntax is supported. The expressions can be evaluated either as boolean predicates (returning True or False) or as functions (returning a scalar value).

Three basic types are supported:

number — both whole numbers and decimal numbers, e.g. 123, 3.14
string — they have to be enclosed in single quotes: 'hello world'
column reference — when evaluating, the reference is substituted with the actual value of the field. The names are not escaped.
The following operations are available:

arithmetic operators: +, -, *, /, ^
parentheses: for enforcing the operator precedence: (1 + 1) * 3
unary plus and minus: -12, +5
mathematical functions: sqrt, sin, cos, tan, asin, acos, atan
geometry functions: $area, $length
conversion functions: to int, to real, to string
And the following predicates are supported:

comparison: =, !=, >, >=, <, <=
pattern matching: LIKE (using % and _), ~ (regular expressions)
logical predicates: AND, OR, NOT
NULL value checking: IS NULL, IS NOT NULL
Examples of predicates:

1 + 2 = 3
sin(angle) > 0
'Hello' LIKE 'He%'
(x > 10 AND y > 10) OR z = 0
Examples of scalar expressions:

2 ^ 10
sqrt(val)
$length + 1

*** example for OR
    #+BEGIN_EXAMPLE
 "type"  =  'primary' OR  "type"  =  'secondary' 
    #+END_EXAMPLE
** maps
*** change label precision
You can use "New Column" tool in attribute table of your layer.

Width represent the total number of digits. Precision represents the number of decimals

Examples:
#+BEGIN_EXAMPLE

Width 5 Precision 3

-2.001
99.999
Width 3 Precision 1

0.1
1.2
99.9
Width 20 Precision 9

11123456789.123456789
#+END_EXAMPLE

If your calculations are getting NULL values, first try to save and refresh your table attribute.

If the problem persist, make sure that the output of your calculus is a number and not a text.
*** Continuous color band for a raster legend in QGIS composer legend
the option is not included nativly in QGIS but here is what I do:
First classify using desired color ramp. Then go to Settings -> Style Manager -> Color Ramp (shows in figure below):

#+DOWNLOADED: /tmp/screenshot.png @ 2015-01-29 16:12:54
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-01-29_16:12:54.png]]

Now you can use a screenshot tool to cut the color ramp image you want and save/edit it

Now, in 'Composer Manager', use 'Add Label' and 'Add Image' to add continuous color ramp along with legend. To get the 'Max' and 'Min' value for continuous color ramp use, Layer Properties -> Style.
%Tip-I already created some common use png images and store them in file:~/.qgis2/ramp/ % 
*** add basemap
more info:
http://maps.cga.harvard.edu/qgis/wkshop/basemap.php

From the main menu click Plugins -> Manage and Install Plugins
Start typing the name of the plugin "OpenLayers" in the SEARCH box and the list will be filtered
OpenLayers should already be installed, as indicated by the checkbox being ticked.
If you get an error using Open Layers Plugin, Uninstall, then Install a fresh version. To install any plugin, click on the item in the list, then INSTALL PLUGIN button.
After you see "successfully installed" dialog box, CLOSE the Plugins window.

`BEFORE` adding your basemap, you must make sure the Projections are set properly.
From the main menu click Project > Project Properties
Now we are ready to add a basemap using OpenLayers plugin.
Back on the main menu, click Web and then navigate to OpenLayers Plugin -> Google Maps -> Google Streets
Or you can pick on of the other layers to add, such as OSM or Yahoo choices.
Click Web from the top menu and -> Open Layers plugins

*** create nice grided exposure maps in qgis
1.import the x,y and epxosure data from csv/dbf
2.convert them into voronoi polygons in qgis2 :
click on "vector", scroll down to "geometry tools", and then click on "voronoi polygons"
3.clip the voronoi layer if needed with other shape file of study region (vector>geomtery tools> clip...)
4.convert the clipped voronoi layer into rasters
** plugins
*** table manager plug-in 
used to delete columns and other DB editing operations
*** spatial join plug-in
https://geogear.wordpress.com/2015/01/14/spatialjoin-v1-0/ 

$Note$-you will need to install python-qt-sql

#+BEGIN_SRC sh
sudo apt-get install  python-qt4-sql
#+END_SRC

and ref plug-in

