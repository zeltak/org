#+TITLE: Qgis

* General
** configuration
*** open attrib table in dock

#+DOWNLOADED: /tmp/screenshot.png @ 2015-02-04 12:04:37
#+attr_html: :width 300px

check the tick box in the setting > data source dialog
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-02-04_12:04:37.png]]

** tips and glossary
**** gllosary

*Geocoding*
 a GIS layer that translates addresses to coordinates

**** xy longitude and latitude

*X*Longitude (shown as a vertical line) is the angular distance, in
degrees, minutes, and seconds, of a point east or west of the Prime
(Greenwich) Meridian. Lines of longitude are often referred to as
meridians.
 *Y-*Latitude (shown as a horizontal line) is the angular distance, in
degrees, minutes, and seconds of a point north or south of the Equator.
Lines of latitude are often referred to as parallels.

 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_VC2z3xSSNWreaVdlPj4SnQ_0002.png]]

**** projections and coordinate systems
***** 1)projections and coordinate systems

*Projections and Coordinate Systems
**Types of coordinate systems*
 There are two common types of coordinate systems used in GIS:
 *1)GCS:*
 A global or spherical coordinate system such as latitude--longitude.
 These are often referred to as geographic coordinate systems *(GCS)
*is often obtained in Decimal degrees such as x: -70.05 y: 42.15*
*GCS is used for large areas and worldwide*
*
 you will see in GIS when an layer is using GCS that the units are in
decimal degrees
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_guoO7G6AekzekVC-HwsUpw_0001.png]]
 *
 2)PCS:*
 A Pojected coordinate system *(PC*S) is based on GCS.
 it has bigger numbers sometimes such as :
 it involves a map projection such as transverse Mercator, Albers equal
area, or Robinson, all of which (along with numerous other map
projection models) provide various mechanisms to project maps of the
earth's spherical surface onto a two-dimensional Cartesian coordinate
plane. Projected coordinate systems are sometimes referred to as map
projections.
 PCS is used for states, countries etc.
 you will see in GIS when an layer is using PCS that the units are in
meters/km etc..
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_guoO7G6AekzekVC-HwsUpw_0002.png]]

***** 2)order of using: define first and then reproject

when dealing with projections you have to keep this in mind:
 1)*FIRST* you need to define the coordinante if missing (GCS). this is
common when getting x,y cords in db files or rasters etc..
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_xyUw0VyI5kOAsxCgL18WFQ_0001.jpg]]
 2)*then*you can reporoject to any PGS system such as UTM etc.

***** 3)converting between projections

converting between different PCS is an important part in order to get
all the layers to be projected similalrly
 after you decide which projection to use and type (UTM,NAD etc..) you
use the reproject tool:
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_vJ2w1YCvUqi0gimOxa673g_0001.png]]
 then deifne the layer to be projected (to the one you decide to use)
and the output file
 NOTE: in some cases you will need to use a transformation
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_vJ2w1YCvUqi0gimOxa673g_0002.png]]
 the file should now be reprojected

***** fix a offsetted coord system

[[~/Documents/My Dropbox/Org/Uni/Guides/ARCGIS_files/attach/steve_melly_cord_fix_adjusted.xlsx][Attachment #01
(steve\_melly\_cord\_fix\_adjusted.xlsx)]]
 if you have a layer/shapefile that moved a bit from the true location
you can use the following method to get it approximately back in place
 *In example:*
 bellow the grey raster is the original location and the green raster is
the raster that has been shifted to the left and bottom by a bit
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0006.png]] to
[[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0007.png]]
 *to solve this:*
 use a correct layer/file to base your correction on. open the layer
properties and extract the info such as cell size and
e[[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0008.png]]xtent:
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0009.png]]
 and
 then take a sample point/grid in the shifted layer:
 [[~/Dropbox/Org/Uni/Guides/ARCGIS_files/img/Image_Ti3nWWTfjaLk2sgmgWgkBA_0010.png]]
 and mark down the X,Y of that point
 then using a math application (like excel) start calculating the
differences *(see attachment)*
 for *X1*use the Left extent of the original layer plus the cell size
divided by 2:
 -108.90066788+0.012048575/2
 for *Y1* use the Bottom extent of the original layer plus the cell size
divided by 2:
 29.9993652723+0.012048575/2
 for *X2* and *Y2* take the X,Y of the sample point
 We then calcualte the diff between X2 and X1 and devide it by the cell
size of the original layer (0.012048575)
 the rest are other calculation that can be seen in the attached file
***** Israel projection
http://tx.technion.ac.il/~zvikabh/software/ITM/

%Tip (the above link also has an online calulator from DD to ITM)%

The standard coordinate grid in Israel is called `Israel Transverse Mercator` (ITM), and is sometimes informally referred to as the "new Israel grid" (רשת ישראל חדשה). This grid appears in detailed maps of Israel. Nonetheless, the older and less accurate Israel Cassini Soldner (ICS) grid or "old Israel grid" (רשת ישראל ישנה) is also still used in many places. For example, despite the official adoption of ITM in 1994, the ICS grid is still displayed more prominently in Israeli hiking maps (מפות סימון שבילים) and is consequently more commonly used by hikers.

The ITM grid is a transverse Mercator projection, meaning that the surface of the earth is projected onto a cylinder whose axis of symmetry is parallel to the equator. This provides an accurate projection along a longitudinal slice of the earth, with the inaccuracy increasing as one moves away from this axis. Thus, for example, the Universal Transverse Mercator (UTM) grid divides the earth into 60 longitudinal slices, each projected separately. Since Israel is a narrow country, whose span from east to west barely exceeds 100 kilometers, a single projection is sufficient for accurately representing the entire area. 

** install 
*** install on debian

Packages for Debian Wheezy, Jessie and Unstable for i386 and amd64 are available at:

#+BEGIN_EXAMPLE
Wheezy (7.x):

deb     http://qgis.org/debian wheezy main
deb-src http://qgis.org/debian wheezy main

Jessie (8.x; testing, not yet released):

deb     http://qgis.org/debian jessie main
deb-src http://qgis.org/debian jessie main

Unstable:

deb     http://qgis.org/debian sid main
deb-src http://qgis.org/debian sid main
#+END_EXAMPLE

To add the the http://qgis.org repository public key to your apt keyring, type:

#+BEGIN_SRC sh
gpg --recv-key DD45F6C3
gpg --export --armor DD45F6C3 | sudo apt-key add -
#+END_SRC

Then add the lines for one of the repositories to your /etc/apt/sources.list file (see below to choose the appropriate one) and type:

#+BEGIN_SRC sh
sudo apt-get update
sudo apt-get install qgis python-qgis qgis-plugin-grass
#+END_SRC

** Vector
*** How to make Voronoi Polygons?

First, add a vector layer, and choose an shape file with your points.

Then, click on "vector", scroll down to "geometry tools", and then click on "voronoi polygons"

A window will then pop-up and you will need to save this polygon. You will need to click browse, name the file and save.

It will then ask you, if you would like to add the new layer to the TOC?, and click yes.

Click cancel

You will then need to drag your points from your layers section to the top of the layer list.

ALL DONE!
*** clipping

Use the Vector -> Geoprocessing -> Clip tool

Input is your roads layer, clip layer is the polygon layer.

$Note- make sure they the same projection$ 
*** spatial join
$Note- make sure they the same projection$ 
Your project should now have two layers in the EPSG:2333 projection -- Taiwan_CARMA and TW_POP_NEW.
We can now proceed to use the JOIN ON LOCATION function (aka SPATIAL JOIN)
Go to menu VECTOR | DATA MANAGEMENT TOOLS | JOIN ATTRIBUTES BY LOCATION
Set the TARGET LAYER = Taiwan_CARMA_Xian80.shp, set the JOIN LAYER = TW_POP_NEW
Click on the OUTPUT SHAPEFILE BROWSE button to set output location and filename, like: "test_join", and set encoding = big5, then click SAVE
Click OK and you will be prompted to add the new join shapefile to the TOC (table of contents), click YES
Open the Attribute Table of the new join layer, "test_join." Scroll to the right, and you should now see that the all the columns from the TW_POP_NEW layer have been added to the table, and each point feature now includes the attributes for the polygon that the point was located in.
*** Cut/Split a polygon feature with a digitized line in QGIS
%Tip-it's important to start and end your splitting line outside of the target layer%

Start QGIS 2.0. Load and display a vector layer e.g. mask.shp.

Select View | Toolbars. Toggle on Advanced Digitizing.

The Advanced Digitizing tool bar is displayed.

In the Layers pane, select the polygon layer. Then select Layer | Toggle Editing.

The polygon layer is enabled for editing.
Click the Split Feature icon.

Digitize a line over a polygon feature.

#+DOWNLOADED: /tmp/screenshot.png @ 2015-02-19 09:05:02
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-02-19_09:05:02.png]]s

Right click to complete the line.

The polygon feature is divided into parts according to the digitized line.


#+DOWNLOADED: /tmp/screenshot.png @ 2015-02-19 09:05:13
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-02-19_09:05:13.png]]

To make the change permanent, toggle off Editing mode.

*** calculate percent of intersecting polygons (for exposure calucluations for SSA etc)
I used intersect from geoprocessing tools, worked fine
then I created a new field calcualting the area of each new polygon ($area)
finally I created a new field calculating the portion of the area of the new polygon from the area of the CT it belongs to (the last 2 fields of the layer). Then I export to csv and from there to R and use this % to weight this grid point when building the weighted average for each census tract. 
*** Select by location (the spatial query plug-in)
first make sure the plug-in is installed
http://docs.qgis.org/2.2/en/docs/user_manual/plugins/plugins_spatial_query.html

then in the vector menu>> spatial plug-in launch the plug-in 

choose the source layer and reference layer and the geo proces (within etc)

then click apply $Note- this will take a long time with large datasets$

when finished you will be presented with the results @ DO NOT click apply again or it will run again@ 

instead save the layer while that result window is open and make sure `save selected features` is checked


#+DOWNLOADED: /tmp/screenshot.png @ 2015-06-09 10:11:28
#+attr_html: :width 300px
 [[~/org/attach/images_2015/screenshot_2015-06-09_10:11:28.png]]
*** Distance calculations  
**** Shortest distance from point to line (for very big datasets)
***** Rasterize line layer
 in qgis use:
 Raster>>Conversion>>Rasterize

 $Note- the input vector maybe leave areas out of the target point layer since it dosnet cover the whole are- my current hack is to create fake lines far away so the even point out of range would be included$ 

 for input file choose the line layer

 in the attribute field choose the ID for the lines

 in the output create a raster (ignore the @Warning@ message)

 define a raster size in pixels- @this has to be small enough to fit the line more or less@, so it maybe be better to have the data projected and choose the `raster resolution in map units per pixel`
 ₆In example₆ for a 250m resolution one can use 250 x250
 $Note- the map maybe just black due to presentation issues the data is still there and you can proceed to next step$ 
 launch OK
***** Convert to Proximity 
 go to Raster>>Analysis>>Proximity
 choose the raster you created in the previous step 
 choose and output location and name
 Make sure "Dist units" are set to GEO (for GEOreferenced coordinates)
 check "Load into canvas..." 
 press OK
***** Use plugin Point sampling tool to get values for all your point from raster
 install the `point sampling tool` plug-in
 launch it (under plugins or from the toolbar icon)
 make sure the point layer your calculating the distance is checked and viable in the qgis window
 select the layer of points in the dropdown menu
 select the fields from both the point layer and raster layer to be included in final shapefile
 in the fields layer you can rename the field
 specify an output layer name and press OK
 To check, sort by roadDist , select those with zero distance, and then see were they are on the map. they should be on a road.
 when the tool finishes press CLOSE

**** calculate distance between 2 point layers 
Go to Vector Analysis Tools Distance Matrix

Here select the the Input point layer (the one you want to calculate distances from it to the target layer) and the the target layer. You also need to select a unique field from each of these layers which is how your results will be displayed.
$Note-make sure you have a valid unique id in the input layer (In example aodid) so that you can later work with the data$ 

%Tip- usually you are looking to get only 1 nearest point, so check the Use only the nearest(k) target points, and enter 1.%
Name your output file NAME.csv, and click OK
 Once the processing finishes, click Close.

%Tip% A useful thing to note is that you can even perform the analysis with only 1 layer. Select the same layer as both Input and Target. The result would be a nearest neighbor from the same layer instead of a different layer as we have used here.
Once the processing finishes, click the Close button in the Distance Matrix dialog.
You can now view the NAME.csv file in Notepad or any text editor.

*** Buffer in QGIS
Input vector Layer – the layer that contains the source objects
Buffer Distance – the distance the buffer will extend from the source objects
Buffer Distance Field – alternatively QGIS can use a value from a numeric field, this makes drawing variable width buffers for features in the same layer easy e.g. Sites rated High Sensitivity could be updated with a buffer distance of 1,000m, sites rated Medium Sensitivity could be updated with a buffer distance of 500m.
Dissolve Buffer Results. The default is to combine the buffers into one region. Enabling this creates a separate region for each source object.
*** Add XY centroids to polygons
**** option 1
Load in your polygon
Go to the menu -> Vector -> Geometry tools -> polygon centroid and create a centroid point layer
Export the coordinates of the created centroid to the attribute
** raster
*** gdal related
**** bugs/errors
***** error saying it cant find the source file
sometime for bizarre reasons qgis will input a wrong/trunctaed (this maybe with use of . in the filname) source file name (it inputs the source name twice one with path and one without (the first).

original erroneous code example 

#+BEGIN_EXAMPLE
gdal_rasterize -a FID -ts 3000 3000 -l france /media/NAS/Uni/Data/GIS/Europe/france/coastline/france.coastline.shp /home/zeltak/ZH_tmp/yy1.tif

#+END_EXAMPLE

we fix this by hand to the correct format

#+BEGIN_EXAMPLE
gdal_rasterize -a FID -ts 3000 3000 -l france.coastline /media/NAS/Uni/Data/GIS/Europe/france/coastline/france.coastline.shp /home/zeltak/ZH_tmp/yy1.tif

#or with untis per pixel
gdal_rasterize -a FID -tr 250.0 250.0 -l france.coastline /media/NAS/Uni/Data/GIS/Europe/france/coastline/france.coastline.shp /home/zeltak/ZH_tmp/francecoast4.raster.tif
#+END_EXAMPLE

*** Zonal Statistics Plugin
With the icon_zonal_statistics Zonal statistics plugin, you can analyze the results of a thematic classification. It allows you to calculate several values of the pixels of a raster layer with the help of a polygonal vector layer (see figure_zonal_statistics). You can calculate the sum, the mean value and the total count of the pixels that are within a polygon. The plugin generates output columns in the vector layer with a user-defined prefix.
*** georeferencing 
http://www.qgistutorials.com/en/docs/georeferencing_basics.html

1.Georeferencing in QGIS is done via the ‘Georeferencer GDAL’ plugin. This is a core plugin - meaning it is already part of your QGIS installation. You just need to enable it. Go to Plugins ‣ Manage and Install Plugins and enable the Georeferencer GDAL plugin in the Installed tab. See Using Plugins for more details on how to work with plugins.

The plugin is installed in the Raster menu. Click on Raster ‣ Georeferencer ‣ Georeferencer to open the plugin.
The plugin window is divided into 2 sections. The top section where the raster will be displayed and the bottom section where a table showing your GCPs will appear.
Now we will open our JPG image. Go to File ‣ Open Raster. Browse to the downloaded image of the scanned map and click Open.
In the next screen, you will asked to choose the raster’s coordinate reference system (CRS). This is to specify the projection and datum of your control points. If you have collected the ground control points using a GPS device, you would have the WGS84 CRS. If you are geo-referencing a scanned map like this, you can obtain the CRS information from the map itself. Looking at our map image, the coordinates are in Lat/Long. There is no datum information given, so we have to assume an appropriate one. Since it is India and the map is quite old, we can bet the Everest 1830 datum would give us good results.
You will see the image will be loaded on the top section.
You can use the zoom/pan controls in the toolbar to learn more about the map.
Now we need to assign coordinates to some points on this map. If you look closely, you will see coordinate grid with markings. Using this grid, you can determine the X and Y coordinates of the points where the grids intersect. Click on Add Point in the toolbar.
In the pop-up window, enter the coordinates. Remember that X=longitude and Y=latitude. Click OK.
You will notice the GCP table now has a row with details of your first GCP.
Similarly, add at least 4 GCPs covering the entire image. The more points you have, the more accurate your image is registered to the target coordinates.
Once you have enough points, go to Settings -> Transformation settings.
In the Transformation settings dialog, choose the Transformation type as Thin Plate Spline. Name your output raster as 1870_southern_india_modified.tif. Choose EPSG:4326 as the target SRS so the resulting image is in a widely compatible datum. Make sure the Load in QGIS when done option is checked. CLick OK.
Back in the Georeferencer window, go to File ‣ Start georeferencing. This will start the process of warping the image using the GCPs and creating the target raster.
Once the process finishes, you will see the georeferenced layer loaded in QGIS.
The georeferencing is now complete. But as always, it’s a good practice to verify your work. How do we check if our georeferencing is accurate? In this case, load the country boundaries shapefile from a trusted source like the Natural Earth dataset and compare them. You will notice they match up pretty nicely. There is some error and it can be further improved by taking more control points, changing transformation parameters and trying a different datum.
** editing 
*** autocomplete polygons 
https://www.youtube.com/watch?v=ety4z72Z33E

if you want to auto create/complete polygons when editing based on the surrounding polygon contours do the following, before you edit go to

Settings >>  Snapping Options >> Snapping Mode  Advanced
then select the layer you want to work on, make sure only vertces are selected, add a large snapping tolerance (for example in projected systems 200m) and make sure to `Check` Avoid intersections.

you can now go to a complex polygon, draw a circle, square etc around it and qgis will create only the matching complex polygon around it.
** selection
*** select by expression
**** select squares above X size
#+BEGIN_EXAMPLE
$area / $perimeter > 400
#other example
abs(($perimeter / 4) - sqrt($area)) < 22
#+END_EXAMPLE

** Expressions
*** base
QGIS has some support for parsing of SQL-like expressions. Only a small subset of SQL syntax is supported. The expressions can be evaluated either as boolean predicates (returning True or False) or as functions (returning a scalar value).

Three basic types are supported:

number — both whole numbers and decimal numbers, e.g. 123, 3.14
string — they have to be enclosed in single quotes: 'hello world'
column reference — when evaluating, the reference is substituted with the actual value of the field. The names are not escaped.
The following operations are available:

arithmetic operators: +, -, *, /, ^
parentheses: for enforcing the operator precedence: (1 + 1) * 3
unary plus and minus: -12, +5
mathematical functions: sqrt, sin, cos, tan, asin, acos, atan
geometry functions: $area, $length
conversion functions: to int, to real, to string
And the following predicates are supported:

comparison: =, !=, >, >=, <, <=
pattern matching: LIKE (using % and _), ~ (regular expressions)
logical predicates: AND, OR, NOT
NULL value checking: IS NULL, IS NOT NULL
Examples of predicates:

1 + 2 = 3
sin(angle) > 0
'Hello' LIKE 'He%'
(x > 10 AND y > 10) OR z = 0
Examples of scalar expressions:

2 ^ 10
sqrt(val)
$length + 1

*** example for OR
    #+BEGIN_EXAMPLE
 "type"  =  'primary' OR  "type"  =  'secondary' 
    #+END_EXAMPLE
** maps
*** change label precision
You can use "New Column" tool in attribute table of your layer.

Width represent the total number of digits. Precision represents the number of decimals

Examples:
#+BEGIN_EXAMPLE

Width 5 Precision 3

-2.001
99.999
Width 3 Precision 1

0.1
1.2
99.9
Width 20 Precision 9

11123456789.123456789
#+END_EXAMPLE

If your calculations are getting NULL values, first try to save and refresh your table attribute.

If the problem persist, make sure that the output of your calculus is a number and not a text.
*** Continuous color band for a raster legend in QGIS composer legend
the option is not included nativly in QGIS but here is what I do:
First classify using desired color ramp. Then go to Settings -> Style Manager -> Color Ramp (shows in figure below):

#+DOWNLOADED: /tmp/screenshot.png @ 2015-01-29 16:12:54
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2015/screenshot_2015-01-29_16:12:54.png]]

Now you can use a screenshot tool to cut the color ramp image you want and save/edit it

Now, in 'Composer Manager', use 'Add Label' and 'Add Image' to add continuous color ramp along with legend. To get the 'Max' and 'Min' value for continuous color ramp use, Layer Properties -> Style.
%Tip-I already created some common use png images and store them in file:~/.qgis2/ramp/ % 
*** add basemap
more info:
http://maps.cga.harvard.edu/qgis/wkshop/basemap.php

From the main menu click Plugins -> Manage and Install Plugins
Start typing the name of the plugin "OpenLayers" in the SEARCH box and the list will be filtered
OpenLayers should already be installed, as indicated by the checkbox being ticked.
If you get an error using Open Layers Plugin, Uninstall, then Install a fresh version. To install any plugin, click on the item in the list, then INSTALL PLUGIN button.
After you see "successfully installed" dialog box, CLOSE the Plugins window.

`BEFORE` adding your basemap, you must make sure the Projections are set properly.
From the main menu click Project > Project Properties
Now we are ready to add a basemap using OpenLayers plugin.
Back on the main menu, click Web and then navigate to OpenLayers Plugin -> Google Maps -> Google Streets
Or you can pick on of the other layers to add, such as OSM or Yahoo choices.
Click Web from the top menu and -> Open Layers plugins

*** create nice grided exposure maps in qgis
1.import the x,y and epxosure data from csv/dbf
2.convert them into voronoi polygons in qgis2 :
click on "vector", scroll down to "geometry tools", and then click on "voronoi polygons"
3.clip the voronoi layer if needed with other shape file of study region (vector>geomtery tools> clip...)
4.convert the clipped voronoi layer into rasters
*** wrap long lines in legend titles

** plugins
*** table manager plug-in 
used to delete columns and other DB editing operations
*** spatial join plug-in
https://geogear.wordpress.com/2015/01/14/spatialjoin-v1-0/ 

$Note$-you will need to install python-qt-sql

#+BEGIN_SRC sh
sudo apt-get install  python-qt4-sql
#+END_SRC

and ref plug-in

*** netCDF- use a qgis plug-in to extract
Although it is not possible to have multiple columns, it is still possible to have the text of the layer or item on multiple lines to avoid long lines of text. This is found in the tab 'General', last item (you have to scroll down), with 'Wrap'. To use '/', enter '/' in the field and then in the tab 'Legend items', when you modify the layer or item name enter something like 'Natural and semi natural/urban greenspaces': the text will break to the next line. 
** Attribute table
*** Sorting
By clicking on the column heading you sort the column in ascending or descending order.
** python
** Programmatically Select a CRS in QGIS using Python (disable CRS popup in input)
you can add the item to define the crs string to the URI like `&crs=EPSG:4326`
Your code should look as follows:
#+begin_src python
#---  6 Set import Sting here note only need to set x and y other come for free
uri = InFlPth+"?delimiter=%s&xField=%s&yField=%s&crs=EPSG:4326" % (",","x","y")

#--- 7 Load point layer
implayer = QgsVectorLayer(uri, InFlnm, "delimitedtext")
#+end_src

