#+TITLE: model hypothesis testing

* Run all
  :PROPERTIES:
    :comments:  no
    :tangle:    yes
    :END:



** start by loading all libraries 

#+BEGIN_SRC R  :session *ansi-term*  :results none
###############
#LIBS
###############
library(lme4)
library(reshape)
library(foreign) 
library(ggplot2)
library(plyr)
library(data.table)
#library(reshape2)
library(Hmisc)
library(mgcv)
library(gdata)
library(car)
library(dplyr)
library(ggmap)
library(broom)
library(splines)
library(DataCombine)
#sourcing
source("/media/NAS/Uni/org/files/Uni/Projects/code/$Rsnips/CV_splits.r")
source("/media/NAS/Uni/org/files/Uni/Projects/code/$Rsnips/rmspe.r")
#+END_SRC

** load data
*** load regular 
#+BEGIN_SRC R  :session *ansi-term*  :results none
mod1 <-readRDS("/media/NAS/Uni/Projects/P031_MAIAC_France/2.work/WORKDIR/mod1.AQ.2003.PM25.c1.rds")
#summary(mod1$pm25)
dim(mod1)
#+END_SRC 
*** load cleaned db
#+BEGIN_SRC R  :session *ansi-term*  :results none
mod1 <-readRDS("/media/NAS/Uni/Projects/P031_MAIAC_France/2.work/WORKDIR/mod1.AQ.2003.PM25.c2.rds")
#describe(mod1$pm25)
dim(mod1)
#+END_SRC 



*** load cleaned db pm10
#+BEGIN_SRC R  :session *ansi-term*  :results none
mod1 <-readRDS("/media/NAS/Uni/Projects/P031_MAIAC_France/2.work/WORKDIR/mod1.AQ.2003.PM10.c2.rds")
#summary(mod1)
dim(mod1)
#+END_SRC 

** models
*** names
 
 #+BEGIN_SRC R  :session *ansi-term*  
names(mod1) 
 #+END_SRC 

 #+RESULTS:
 | aodid              |
 | day                |
 | stn                |
 | c                  |
 | long_pm25          |
 | lat_pm25           |
 | stn.elev           |
 | pm25               |
 | closest            |
 | m                  |
 | aod                |
 | UN                 |
 | QA                 |
 | Year               |
 | pop06              |
 | pcturb             |
 | elev_m             |
 | distA1             |
 | wflag              |
 | tden               |
 | tempavg            |
 | wsavg              |
 | rhavg              |
 | rainday            |
 | PBL                |
 | season             |
 | seasonSW           |
 | ndvi               |
 | obs                |
 | long_aod.x         |
 | lat_aod.x          |
 | meanPM25           |
 | meanPM10           |
 | reg                |
 | region.x           |
 | normwt             |
 | numadata           |
 | flag1000           |
 | flag500            |
 | tden.s             |
 | elev.s             |
 | pden.s             |
 | da1.s              |
 | ndvi.s             |
 | pbl.s              |
 | p_urb.s            |
 | temp.s             |
 | winds.s            |
 | rh.s               |
 | rain.s             |
 | emsid              |
 | dair               |
 | dport              |
 | X                  |
 | Y                  |
 | lat_aod.y          |
 | long_aod.y         |
 | id                 |
 | region.y           |
 | dist_train         |
 | dist.aroad         |
 | dist.coast         |
 | dist.wb            |
 | Height class (1-5) |
 | long_ems           |
 | lat_ems            |
 | NO2                |
 | NMVOC              |
 | SO2                |
 | NH3                |
 | PM2.5              |
 | PM10               |
 | CO                 |
 | Pb                 |
 | Cd                 |
 | Hg                 |
 | PCD                |
 | p.agric            |
 | p.opem             |
 | p.urban            |
 | p.forest           |
 | reg.y              |
 | pmreg              |
 | cid                |
 | c2id               |
 | pmzsimpid          |
 | cmidsimp           |
 | dair.s             |
 | dport.s            |
 | dtrain.s           |
 | daroad.s           |
 | dcoast.s           |
 | dwb.s              |
 | NO2.s              |
 | SO2.s              |
 | PM25ems.s          |
 | PM10ems.s          |
 | p.agric.s          |
 | p.open.s           |
 | p.urban.s          |
 | p.forest.s         |
 | dair.l             |
 | dport.l            |
 | dtrain.l           |
 | daroad.l           |
 | dcoast.l           |
 | dwb.l              |
 | NO2.l              |
 | SO2.l              |
 | PM25ems.l          |
 | PM10ems.l          |
 | p.agric.l          |
 | p.open.l           |
 | p.urban.l          |
 | p.forest.l         |
 | tden.l             |
 | elev.l             |
 | pden.l             |
 | da1.l              |
 | ndvi.l             |
 | pbl.l              |
 | winds.l            |
 | rh.l               |
 | rain.l             |
 | aod.l              |
 | temp.l             |
 | badid              |
 | pred.m1            |

 
*** aodid random  model (CV R^2 0.67 )
this is the one we ended up using 
#+BEGIN_SRC R  :session *ansi-term*  :results none
   m1.formula <- as.formula(pm25 ~aod
   #temporal
  +(1+aod|day/cid)+ (1+m|aodid))  

  #run model
    m1_sc <- lmer(m1.formula,data=mod1)
    summary(m1_sc)
    mod1[,pred.m1 := NULL]
    mod1$pred.m1 <- predict(m1_sc)
    print(summary(lm(pm25~pred.m1,data=mod1))$r.squared)
   #RMSPE
  print(rmse(residuals(m1_sc)))

#+END_SRC 


*** testing model (CV R^2 0.70)
this is the one we ended up using 
#+BEGIN_SRC R  :session *ansi-term*  :results none

 m1.formula <- as.formula(pm25 ~aod
#temporal
+temp.s 
#spatial
+elev_m+tden
#+pbl.s
#distances
+dair.s+dport.s+dtrain.s+daroad.s+dcoast.s+dwb.s    
#emissions
+NO2.s+SO2.s+PM10ems.s
#LU
+ p.open.s +p.forest.s +p.urban.s +as.factor(cid) 
#random
+(1+aod|day/cid) +(1+m|aodid)   ) 

#run model
  m1_sc <- lmer(m1.formula,data=mod1)
  summary(m1_sc)
  mod1[,pred.m1 := NULL]
  mod1$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1))$r.squared)
 #RMSPE
print(rmse(residuals(m1_sc)))

#+END_SRC 

*** testing model PM10  (CV R^2 )
this is the one we ended up using 
#+BEGIN_SRC R  :session *ansi-term*  :results none
  m1.formula <- as.formula(pm10 ~aod
  #temporal
 # +temp.s 
  #spatial
  +elev_m+tden+pbl.s
  #distances
  +dair.s+dport.s+dtrain.s+daroad.s+dcoast.s+dwb.s    
  #emissions
  +NO2.s+SO2.s+PM10ems.s
  #LU
  + p.open.s +p.forest.s +p.urban.s +as.factor(cid) 
  #random
  +(1+aod|day/cid)  ) 

  #run model
  m1_sc <- lmer(m1.formula,data=mod1)
  summary(m1_sc)
    mod1[,pred.m1 := NULL]
    mod1$pred.m1 <- predict(m1_sc)
    print(summary(lm(pm10~pred.m1,data=mod1))$r.squared)
   #RMSPE
  print(rmse(residuals(m1_sc)))

#+END_SRC 


*** test linarity

#+BEGIN_SRC R  :session *ansi-term*  :results none
g1<-gam(pm25~s(aod)+s(tempa.s)+s(WSa.s), data=mod1  )
plot(g1)
#+END_SRC 
+s(elev.s)+s(tden.s)+s(pden.s)+s(ndvi.s)+s(PBL)+s(dair)+s(dport)+s(dist_train)+s(dist.aroad)+s(dist.coast)+s(dist.wb)+s(p.agric)+ s(p.forest) + s(NO2)+s(SO2)+s(PM2.5)+s(PM10
** Cross validation 

#+BEGIN_SRC R  :session *ansi-term*  :results none

  #---------------->>>> CV
  #s1
  splits_s1 <- splitdf(mod1)
  test_s1 <- splits_s1$testset
  train_s1 <- splits_s1$trainset
  out_train_s1 <- lmer(m1.formula,data =  train_s1,weights=normwt)
  test_s1$pred.m1.cv <- predict(object=out_train_s1 ,newdata=test_s1,allow.new.levels=TRUE,re.form=NULL )
  test_s1$iter<-"s1"
  #s2
  splits_s2 <- splitdf(mod1)
  test_s2 <- splits_s2$testset
  train_s2 <- splits_s2$trainset
  out_train_s2 <- lmer(m1.formula,data =  train_s2,weights=normwt)
  test_s2$pred.m1.cv <- predict(object=out_train_s2 ,newdata=test_s2,allow.new.levels=TRUE,re.form=NULL )
  test_s2$iter<-"s2"
  #s3
  splits_s3 <- splitdf(mod1)
  test_s3 <- splits_s3$testset
  train_s3 <- splits_s3$trainset
  out_train_s3 <- lmer(m1.formula,data =  train_s3,weights=normwt)
  test_s3$pred.m1.cv <- predict(object=out_train_s3 ,newdata=test_s3,allow.new.levels=TRUE,re.form=NULL )
  test_s3$iter<-"s3"
  #s4
  splits_s4 <- splitdf(mod1)
  test_s4 <- splits_s4$testset
  train_s4 <- splits_s4$trainset
  out_train_s4 <- lmer(m1.formula,data =  train_s4,weights=normwt)
  test_s4$pred.m1.cv <- predict(object=out_train_s4 ,newdata=test_s4,allow.new.levels=TRUE,re.form=NULL )
  test_s4$iter<-"s4"
  #s5
  splits_s5 <- splitdf(mod1)
  test_s5 <- splits_s5$testset
  train_s5 <- splits_s5$trainset
  out_train_s5 <- lmer(m1.formula,data =  train_s5,weights=normwt)
  test_s5$pred.m1.cv <- predict(object=out_train_s5 ,newdata=test_s5,allow.new.levels=TRUE,re.form=NULL )
  test_s5$iter<-"s5"
  #s6
  splits_s6 <- splitdf(mod1)
  test_s6 <- splits_s6$testset
  train_s6 <- splits_s6$trainset
  out_train_s6 <- lmer(m1.formula,data =  train_s6,weights=normwt)
  test_s6$pred.m1.cv <- predict(object=out_train_s6 ,newdata=test_s6,allow.new.levels=TRUE,re.form=NULL )
  test_s6$iter<-"s6"
  #s7
  splits_s7 <- splitdf(mod1)
  test_s7 <- splits_s7$testset
  train_s7 <- splits_s7$trainset
  out_train_s7 <- lmer(m1.formula,data =  train_s7,weights=normwt)
  test_s7$pred.m1.cv <- predict(object=out_train_s7 ,newdata=test_s7,allow.new.levels=TRUE,re.form=NULL )
  test_s7$iter<-"s7"
  #s8
  splits_s8 <- splitdf(mod1)
  test_s8 <- splits_s8$testset
  train_s8 <- splits_s8$trainset
  out_train_s8 <- lmer(m1.formula,data =  train_s8,weights=normwt)
  test_s8$pred.m1.cv <- predict(object=out_train_s8 ,newdata=test_s8,allow.new.levels=TRUE,re.form=NULL )
  test_s8$iter<-"s8"
  #s9
  splits_s9 <- splitdf(mod1)
  test_s9 <- splits_s9$testset
  train_s9 <- splits_s9$trainset
  out_train_s9 <- lmer(m1.formula,data =  train_s9,weights=normwt)
  test_s9$pred.m1.cv <- predict(object=out_train_s9 ,newdata=test_s9,allow.new.levels=TRUE,re.form=NULL )
  test_s9$iter<-"s9"
  #s10
  splits_s10 <- splitdf(mod1)
  test_s10 <- splits_s10$testset
  train_s10 <- splits_s10$trainset
  out_train_s10 <- lmer(m1.formula,data =  train_s10,weights=normwt)
  test_s10$pred.m1.cv <- predict(object=out_train_s10 ,newdata=test_s10,allow.new.levels=TRUE,re.form=NULL )
  test_s10$iter<-"s10"

  #BIND 1 dataset
  mod1.cv<- data.table(rbind(test_s1,test_s2,test_s3,test_s4,test_s5,test_s6,test_s7,test_s8,test_s9, test_s10))

  m1.fit.all.cv<-lm(pm25~pred.m1.cv,data=mod1.cv)
  print(summary(lm(pm25~pred.m1.cv,data=mod1.cv))$r.squared)
  print(rmse(residuals(m1.fit.all.cv)))
#+END_SRC 

** testing by region

*** split to regions by cmid

#+BEGIN_SRC R  :session *ansi-term*  :results none
mod1.r1<-filter(mod1,cid==1) 
mod1.r2<-filter(mod1,cid==2) 
mod1.r3<-filter(mod1,cid==3) 
mod1.r4<-filter(mod1,cid==4) 
mod1.r5<-filter(mod1,cid==5) 
#+END_SRC

**** r1 R2= 0.92 (mountain areas)

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r1 ,weights=normwt)
  mod1.r1$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r1))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 

**** r2 R2=0.77 oceanic areas

#+BEGIN_SRC R  :session *ansi-term*  :results none
m1_sc <- lmer(m1.formula,data=mod1.r2 ,weights=normwt)
mod1.r2$pred.m1 <- predict(m1_sc)
print(summary(lm(pm25~pred.m1,data=mod1.r2))$r.squared)
#RMSPE
print(rmse(residuals(m1_sc)))
#+END_SRC 

**** r3 R2=0.83 inner oceanic areas

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r3 ,weights=normwt)
  mod1.r3$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r3))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 

**** r4 R4=0.XX mediteranian wont run

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r4 ,weights=normwt)
  mod1.r4$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r4))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 
**** r5 R5=0.91

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r5 ,weights=normwt)
  mod1.r5$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r5))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 


*** split to regions by pmreg

#+BEGIN_SRC R  :session *ansi-term*  :results none
mod1.r1<-filter(mod1,pmreg=="high") 
mod1.r2<-filter(mod1,pmreg=="low") 
mod1.r3<-filter(mod1,pmreg=="med") 
mod1.r4<-filter(mod1,pmreg=="mlow") 
#+END_SRC

**** r1 R2= 0.75 high pm

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r1 ,weights=normwt)
  mod1.r1$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r1))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 

**** r2 R2=0.83 low pm

#+BEGIN_SRC R  :session *ansi-term*  :results none
m1_sc <- lmer(m1.formula,data=mod1.r2 ,weights=normwt)
mod1.r2$pred.m1 <- predict(m1_sc)
print(summary(lm(pm25~pred.m1,data=mod1.r2))$r.squared)
#RMSPE
print(rmse(residuals(m1_sc)))
#+END_SRC 

**** r3 R2=0.82 medium pm

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r3 ,weights=normwt)
  mod1.r3$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r3))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 

**** r4 R4=0.XX wont run

  #+BEGIN_SRC R  :session *ansi-term*  :results none
  m1_sc <- lmer(m1.formula,data=mod1.r4 ,weights=normwt)
  mod1.r4$pred.m1 <- predict(m1_sc)
  print(summary(lm(pm25~pred.m1,data=mod1.r4))$r.squared)
  #RMSPE
  print(rmse(residuals(m1_sc)))
  #+END_SRC 
