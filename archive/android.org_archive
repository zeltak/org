
Archived entries from file /home/zeltak/org/files/Tech/android.org


* setup arch to connect to android
  :PROPERTIES:
  :ARCHIVE_TIME: 2016-01-02 Sat 10:06
  :ARCHIVE_FILE: ~/org/files/Tech/android.org
  :ARCHIVE_OLPATH: Android/Linux/ADB
  :ARCHIVE_CATEGORY: android
  :END:
﻿Getting SDK and IDE plugins

!Note: If you are running Arch64, you have to enable!
[[https://wiki.archlinux.org/index.php/Arch64_FAQ#Multilib_Repository_-_Multilib_Project]]
to be able to to install the required dependencies using PACMAN 

Install core SDK components from AUR

[[https://aur.archlinux.org/packages/android-sdk/][android-sdk]]

[[https://aur.archlinux.org/packages/android-sdk-platform-tools/][android-sdk-platform-tools]]

Typical installation location is /opt/android-sdk.

Make sure that your user is added to the group:

#+begin_src sh
gpasswd -a USERNAME adbusers
#+end_src

`Android Debug Bridge (ADB) - Connecting to a real device`

To get ADB to connect to a real device or phone under Arch, you must
make a [[https://wiki.archlinux.org/index.php/Udev][udev]] rules to
connect the device to the proper /dev/ entries:

Install the AUR package
[[https://aur.archlinux.org/packages/android-udev/][android-udev]] to  get a common list of vendor IDs. If [[https://wiki.archlinux.org/index.php/Android#Does_It_Work.3F][ADB recognizes your device]] (it is visible and accessible in IDE), you are
done. Otherwise see instructions below.

`Figure Out Your Device Ids`

Each Android device has a USB vendor/product ID. An example for HTC Evo
is:

 vendor id: 0bb4
 product id: 0c8d

Plug in your device and execute:

#+BEGIN_EXAMPLE
lsusb
#+END_EXAMPLE

It should come up something like this:
Bus 002 Device 006: ID 0bb4:0c8d High Tech Computer Corp.

`Adding udev Rules`

Use the rules from
[[http://source.android.com/source/initializing.html#configuring-usb-access][Android
developer]] or you can use the following template for your udev rules,
just replace [VENDOR ID] and [PRODUCT ID] with yours.
 Copy these rules into /etc/udev/rules.d/51-android.rules

or create your own:

 SUBSYSTEM=="usb", ATTR{idVendor}=="04e8", MODE="0666"

SUBSYSTEM=="usb",ATTR{idVendor}=="04e8",ATTR{idProduct}=="6860",SYMLINK+="android\_adb"

SUBSYSTEM=="usb",ATTR{idVendor}=="04e8",ATTR{idProduct}=="6860",SYMLINK+="android\_fastboot"

SUBSYSTEM=="usb",ATTR{idVendor}=="18d1",ATTR{idProduct}=="4e42",SYMLINK+="android\_adb",OWNER="zeltak"

SUBSYSTEM=="usb",ATTR{idVendor}=="18d1",ATTR{idProduct}=="4e42",SYMLINK+="android\_fastboot",OWNER="zeltak"

Then, to reload your new udev rules, execute:
 # udevadm control --reload-rules

Note: reloading udev rules under systemd should not be required, as any
rule changes should be picked up automatically.

 *Does It Work?*

After you have setup the udev rules, unplug your device and replug it.

After running:
 $ adb devices
 you should see something like:
 List of devices attached
 HT07VHL00676 device

 Troubleshooting:
  

If you do not have the *adb* program (usually available in
/opt/android-sdk/platform-tools/), it means you have not installed the
platform tools.

If you are getting an empty list (your device isn't there), it may be
because you have not enabled USB debugging on your device. You can do
that by going to Settings => Applications => Development and enabling
USB debugging.

If there are still problems such as adb displaying 
"???????? no permissions"

under devices, try restarting the adb server as root.

#+begin_src sh
adb kill-server
adb start-server
#+end_src

Pasted from [[https://wiki.archlinux.org/index.php/Android][https://wiki.archlinux.org/index.php/Android]]
