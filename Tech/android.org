#+TITLE: android

* Android
** Nexus one

[[android_files/img/Image_0002.png]]

*** Unlock N1/install cynanogenmod

[[android_files/img/Image_0003.png]]

**** 1.unlock bootloader

Install fastboot on the computer (look at zeltak ~/bin) or get it from
here:

[[http://developer.htc.com/adp.html][http://developer.htc.com/adp.html]]
 Boot into bootloader mode by holding down the trackball while turning
the device on.
 You should see a white screen with three skating androids.
 Connect the Nexus One to the computer via USB.
 *NOTE: on linux make sure you have udev configured:*

sudo vim /etc/udev/rules.d/51-android.rules

 NOTE: Some of you may have already added the Vendor ID. add the
following below if not blank:
 SUBSYSTEMS=="usb", ATTRS{idVendor}=="18d1", ATTRS{idProduct}=="4e11",
MODE="0666", OWNER="<your user name>" #Normal nexus one
 SUBSYSTEMS=="usb", ATTRS{idVendor}=="18d1", ATTRS{idProduct}=="4e12",
MODE="0666", OWNER="<your user name>" #Debug & Recovery nexus one
 SUBSYSTEMS=="usb", ATTRS{idVendor}=="0bb4", ATTRS{idProduct}=="0fff",
MODE="0666", OWNER="<your user name>" #Fastboot nexus
 SEE:

[[http://wiki.cyanogenmod.com/wiki/Udev#Nexus_One][http://wiki.cyanogenmod.com/wiki/Udev#Nexus\_One]]
for further phones.
 On the computer, open terminal and run:

fastboot oem unlock

     On the Nexus One, a prompt will open up asking you if you are sure
you want to unlock the bootloader and again warning you that doing so
will void your warranty. If you agree to these terms, press Volume Up to
select Yes, and then press the Power button to confirm.
 NOTE: Unlocking the bootloader wipes the device. The Nexus One will
reboot. [[android_files/img/Image_0004.png]]

**** 2.install a custom recovery image

﻿*1) Installing a Custom Recovery Image*

For the Nexus One, there are two custom recovery images available,
 *Amon\_Ra's* Recovery & the *ClockworkMod* Recovery.
 Choose one and follow the instructions below on how to install each
custom recovery
 image. If you have already flashed a custom recovery image, skip this
section.
 NOTE: on my N1 (zeltak) the clockwork method didnt work and i uses RA

 *Amon\_Ra's Recovery
*
  Download the latest version of Amon\_Ra's Recovery:
 Boot into bootloader mode by holding down the trackball while turning
the device on. You should see a white screen with three skating
androids.
 Connect the Nexus One to the computer via USB. On the computer, open
terminal and run:

fastboot flash recovery /PATH/TO/recovery-RA-nexus-v2.1.1-CM.img

 Amon\_Ra's Recovery should now be installed on the Nexus One.
 to Access it in the bootloader (the white screen with three skating
androids) press the '*fasboot*'option to get to the botting menu and
then choose'*recovery*'**.
 Pasted from
<[[http://wiki.cyanogenmod.com/wiki/Nexus_One:_Full_Update_Guide][http://wiki.cyanogenmod.com/wiki/Nexus\_One:\_Full\_Update\_Guide]]>
 *clockwork Recovery
*Follow the Amon ra exapmple 1:1 but just use the clock work image
file[[android_files/img/Image_0005.png]]

**** 3.Install cyanogenmod

Flashing CyanogenMod:
 *Amon\_Ra's Recovery process*
 download the latest version of CyanogenMod and download the Google Apps
for the device.
 Place the CyanogenMod update.zip file and Google Apps .zip file on the
root of the SD card.
 Boot into Amon\_Ra's Recovery.
 Once you enter Amon\_Ra's Recovery, scroll up & down with the
trackball, and the trackball button to select.
 Select Wipe, then Wipe data/factory reset
 select Flash zip from sdcard.
 Select the CyanogenMod update.zip.
 Install the Google Apps by performing steps 6 & 7 again and choosing
the Google Apps update.zip.
 Once the installation has finished, select Reboot system. The Nexus One
now should boot into CyanogenMod. [[android_files/img/Image_0006.png]]

**** 4.upgrade cyanogenmod

download the latest version of CyanogenMod and put it on the root of the
sd card
 Boot into bootloader mode by holding down the trackball while turning
the device on. choose the '*fasboot*'option to get to the botting menu
and then choose'*recovery*'**.
 Once you enter Amon\_Ra's Recovery, scroll up & down with the
trackball, and the trackball button to select.
 Select flash from sd card
 Select the CyanogenMod update.zip.
 install[[android_files/img/Image_0007.png]]

*** installed apps

[[android_files/img/Image_0008.png]]

**** current

Acast
 apps2sd
 barcode scanner
 box.net
 car dock home
 car mode
 clipper+
 co-pilot live
 docs (google)
 easy installer
 epistle
 TC
 extended controls
 folder organizer
 ftp droid
 metro
 mort player
 newsrob
 no lock
 pdf viewer
 PI
 ringdroid
 Silent Mode Timer
 skype
 tasker
 *maybe*
 timerffic??
 unlock with wifu
 [[android_files/img/Image_0009.png]]

** Nexus 6 
*** Root nexus 6 and unlock bootloader
**** make sure adb is installed properly
on Arch install it from AUR
to check issue:
#+BEGIN_SRC sh
adb version
#+END_SRC

**** prepare phone
>>>>>>Before you begin, make sure your N6 has USB Debugging Mode switched on<<<<<<
Before continuing, users must enable Developer Options in the devices settings and select the OEM Unlock option. To do so:

#+BEGIN_EXAMPLE
- Go into Settings
- Under About Phone, you'll be able to locate your Build Number
- Tap Build Number until you are notified that you have activated Developer options
- Go into Developer Options, ensure it is enabled and check the Enable OEM Unlock box
- While in Developer Options, ensure the USB Debugging box is checked
#+END_EXAMPLE

**** Unlock The Bootloader
Turn the phone off. Then boot it into the bootloader/fastboot mode by holding volume down + power.
Plug the phone into your PC, then open a command prompt window window and type:
#+BEGIN_SRC sh
fastboot devices
#+END_SRC

This command will list the connected devices. If your phones serial number shows up you are good to go and may continue. If the phone is NOT listed this indicates that your drivers are not installed correctly. In order for you to continue you must fix your drivers so that your phone is listed under fastboot devices.

If the phone has been recognized by the command above, proceed to unlocking the bootloader with the following command:
Remember that this step will wipe EVERYTHING off the phone
#+BEGIN_SRC sh
fastboot oem unlock
#+END_SRC
On the phone a screen should pop up asking whether or not you would like to unlock the bootloader. Use the volume rockers to highlight "Yes" then press power to confirm the action.
!After the above command has finished executing, run the following!
@ DO NOT skip this step, it is more important than you think@

#+BEGIN_SRC sh
fastboot reboot
#+END_SRC

The phone will reboot. Next you will be presented with a screen containing an android logo and a progress bar (this may take up to ten minutes to complete). Wait until the phone has fully booted up into android, then proceed onto the next section of the guide.
Close the command prompt window.

**** Obtain Root
The instructions below and the zip file are the work of our beloved @Chainfire. CF-Root is the root for "rooting beginners" and those who want to keep as close to stock as possible. CF-Root is meant to be used in combination with stock firmware and be the quickest and easiest way for your first root.

- Download the ZIP file at http://download.chainfire.eu/628/CF-Root/CF-Auto-Root/CF-Auto-Root-shamu-shamu-nexus6.zip
its also in my own local folder as CF-Auto-Root-shamu-shamu-nexus6.zip:
file:/home/zeltak/org/attach/files_2015/CF-Auto-Root-shamu-shamu-nexus6.zip

- Extract the ZIP file
- Boot your device in bootloader/fastboot mode. Usually this can be done by turning your device off, then holding VolUp+VolDown+Power to turn it on.
- Connect your device to your computer using USB

- Windows:
--- Run root-windows.bat

- Linux
--- chmod +x root-linux.sh
--- Run root-linux.sh

- Mac OS X
--- chmod +x root-mac.sh
--- Run root-mac.sh

Follow the on-screen instructions - watch both the computer and the device!

** apps
*** install obb files
install the apk then copy the folder containing the .obb files to file:android/obb/
$Note-if the obb folder is missing create it yourself $ 
*** notifications

[[android_files/img/Image_0020.png]]

**** set notification sound in gmail

﻿Click on your Gmail icon.
 Press "Menu"
 Select "More"
 Select "Settings"
 Select the email address you'd like to change (eg
[[http://androidforums.commailto:yourname@gmail.com][yourname@gmail.com]])
 Select "Lables to Notify"
 Hit the dropdown arrow next to "Inbox"
 Select "Ringtone" and then select "Silent".
 Pasted from
<[[http://androidforums.com/motorola-droid-x2/417954-stop-new-email-notification-sound.html][http://androidforums.com/motorola-droid-x2/417954-stop-new-email-notification-sound.html]]>

*** Beyondpod

**** use llama to start playing podcast when headphones inserted

In Llama use: Action: Android Intent, Intent send mode: Broadcast,
Action: mobi.beyondpod.command.(whathever command you want)

**** API

﻿

BeyondPod currently exposes 3 types of APIs:

-  Broadcasts of the currently Played Episode. If "Scrobble Episodes" is
   checked in BeyondPod's player settings, BeyondPod will broadcast
   events on each Play/Pause. The event structure and parameters are
   described
   here: [[http://code.google.com/p/scrobbledroid/wiki/DeveloperAPI][http://code.google.com/p/scrobbledroid/wiki/DeveloperAPI]] .
   (Starting with version 2.8.2, BeyondPod will also broadcast an
   independen BeyondPod specific event
   "mobi.beyondpod.action.PLAYBACK\_STATUS" with the same parameters the
   scrobble event, regardless if Scrobble Episodes is enabled or not).
   The event is sent any time playback starts or stops.
-  Contro

l Commands. BeyondPod will listen and respond to the following
broadcasts from any external applications:

-  mobi.beyondpod.command.UPDATE\_SMART\_PLAY
-  mobi.beyondpod.command.START\_SMART\_PLAY
-  mobi.beyondpod.command.PLAY
-  mobi.beyondpod.command.PAUSE
-  mobi.beyondpod.command.PLAY\_NEXT
-  mobi.beyondpod.command.PLAY\_PREVIOUS
-  mobi.beyondpod.command.SKIP\_FORWARD
-  mobi.beyondpod.command.SKIP\_BACKWARD
-  mobi.beyondpod.command.SKIP\_TO\_END
-  mobi.beyondpod.command.SET\_PLAYBACK\_SPEED\_NORMAL
-  mobi.beyondpod.command.SET\_PLAYBACK\_SPEED\_1
-  mobi.beyondpod.command.SET\_PLAYBACK\_SPEED\_2
-  

•External Player Interface. BeyondPod has a simple infrastructure that
allows BeyondPod to integrate better with external players. Generally
when launching an external player, BeyondPod sends "Intent.ACTION\_VIEW"
Intent and provides the path (or url) to the file to be played and the
mime type of the file (audio/*, video/* or image/*). BeyondPod will also
provide an Intent "extra" named "startPosition" (float) - this is the
fraction of the podcast that has been played, and (if the Player
supports it) the player should resume from that position.  When the
external player finishes playing, it can also return a result containing
"position" (float) and "duration" (int), extras containing the current
position and the duration of the played content as tracked by the
external player. This mechanism allows BeyondPod to keep track and
resume of the played progress in external players as well as allows
BeyondPod to "feed" its internal playlist to the external player. This
interface is currently supported by VPlayer video player, available on
Android Market.
 Pasted from
<[[http://beyondpod.com/support/index.php?/Knowledgebase/Article/View/31/5/beyondpod-public-apis][http://beyondpod.com/support/index.php?/Knowledgebase/Article/View/31/5/beyondpod-public-apis]]>

*** Titanim Backup

**** Backup and Restore with Titanium Backup complete guide

Backup before ROM install
 ﻿In Titanium Backup select the tick at the top right corner of the
page, this will take you to the backup/restore options.
  
 Scroll to *backup all user apps* and hit the *RUN* button to start
backing up your apps
 when finished go *back to backup/restore.*
  
 Here in the list you will see your apps that have been backed up and
the files that haven't, the files that haven't are the system files
 now you only need from these files *your personal data and few titanium
backup files which are named below:*
  
 Accounts and sync settings - highlighted in RED
 Contact's
 Sms/mms/apn settings
 Bookmarks
 Calender if you have birthdays, reminders, appointments etc
 Titanium Backup - accounts
 Titanium Backup - app widgets
 Titanium Backup - country, language, time zone
 Titanium Backup - wi fi access points.
 Titanium Backup - playlist - (optional)
 Titanium Backup - wallpaper - (optional)
  
 These files are highlighted in GREEN.
  
 These are the main files you need to backup, the other files will be
installed with the new rom and kernel.
  
 Now select the tick at the top right corner of the page, press RUN next
to *backup all system data.*
  
 Now press *DESELECT all* and tick the boxes for the files above then
press *Green checkbox* the batch operation.
  
 That's it your backups are saved in the Titanium folder on your
internal sd card ready for you to install after you install your new
custom rom.
  
  
 To restore your apps and personal data after your rom installation:
  just download Titanium Backup from the market/playstore and install.
  
 *Please note* that you have to install the FREE version of Titanium
Backup first, then install the unlock key in that order.
  
 select the tick at top right corner of the page.
  
 Now scroll down to restore all missing apps + system data and press
RUN.
  
 When finished REBOOT the phone.
  
 Your apps and personal data should now be restored.
 Pasted from
<[[http://checkrom.com/threads/titanium-backup-explained.433/][http://checkrom.com/threads/titanium-backup-explained.433/]]>

**** create a backup.zip to flash in recovery mode

Open up Titanium Back up > Click Batch Mode (in the top right corner) >
Scroll down and you'll find "Recovery mode" "Create"update.zip" from
app+data backups".

*** tasker

**** ideA

Autorotate for select apps. I used to use a toggle button to turn
autorotate off and on as needed. Really, though, the only app I use
autorotate for is the photo Gallery app. So I set up Tasker to turn
autorotate on when I launch Gallery, and then turn it back off again
when I'm done. 
 Suppress Notifications. If I'm listening to music, I don't want
notification sounds interrupting me, so Tasker lets me turn the
notification volume off when I'm listening to music.
 Send a "Happy Birthday!" email/text to various people on their
birthdays.
 Screen timeout change for various apps
 Car Profile 
 Enter Task
 1) Disable PIN Security so I don't need to unlock my phone while in the
car (one less distraction)
 2) Set Media Volume to 15
 3) Turn Wifi off
 4) Change Display timeout to 30 minutes (nice for google maps and
viewing the album art of the streaming music)
 5) Turn on GPS IF power is connected to phone
 6) Start recording video with DailyRoads Voyager ( A car DVR program in
case of an accident so you then have Objective evidence)
 7) Play the THX sound after a couple seconds to make sure the Bluetooth
audio streaming is working right
 Car EXIT task
 1) Stop Recording Video for DailyRoads Voyager (DRV)
 2) Wait 5 seconds
 3) Kill App - DRV
 4) Perform Task - PIN ON
 5) Secure Settings - Disable GPS
 6) Display Timeout - 2 min
 7) WiFi - Turn ON
 8) Bluetooth - Off
 9) Display Brightness - Set to 150 out of 255
 Other fun stuff
 Home VAR %STATUS\_HOME
 Set VAR for when I am near my home micro-cell as the signal radius is
small and specific to my house. I use this since the phone part is
always on and I don't need to use GPS to determine location which uses
more juice. That VAR is then used to turn on wifi when I arrive at home,
disable PIN again, Flash "Welcome home", set WiFi sleep to Never. The
Exit task for when I leave home turns PIN ON and sets the WiFi sleep
policy to Never While Plugged"
 Power VAR %STATUS\_POWER
 I have 2 seperate profiles for when I am connected to AC or USB power.
The AC one sets the power VAR to 2 while the USB one sets it to 1. Both
are used for other tasks and profiles, like the car one above requires
AC connection so my GPS doesn't drain my battery even while connected. I
have it flash "AC connected" or "USB connected" to let me know if the
phone is receiving the correct amount of juice. When both of them exit
they set the Power VAR to 0 and flash "Power Disconnected"
 Sleepy Time
 Profile conditions
 1) Time - From 00:01 to 06:30
 2) State - Home VAR = 1 (so this doesn't happen when I am out and about
somewhere at night)

Click the plus sign

For /New Profile Name/ typeCode:Screen On Data On

Click the check box

Select *Event*

Select *Display*

Select *Display On*

Click the check box

Click *New Task*

TypeCode:Data On

Click the check box

Click the plus sign

Click *Net*

Click *Mobile Data*

Under /Set/, select *On*

Click the check box

Click the check box

Click the plus sign

For /New Profile Name/ typeCode:Screen Off Data Off

Click the check box

Select *Event*

Select *Display*

Select *Display Off*

Click the check box

Click *New Task*

TypeCode:Data Off

Click the check box

Click the plus sign

Click *Net*

Click *Mobile Data*

Under /Set/, select *Off*

Click the check box

Click the check box

Click the check box

[[android_files/img/Image_0021.png]]

*** pocket casts
**** intents
How do I integrate Pocket Casts with the Tasker app?

We are hoping to be added to the 3rd Party section in Tasker but until we do here is the long way.
When you are adding an action choose "Misc" and next "Send Intent". Below is a list of the names you can type in the "Action" field to interact with Pocket Casts.

Play the podcast episode that is currently paused in Pocket Casts.
au.com.shiftyjelly.pocketcasts.action.PLAY

Pause the podcast episode.
au.com.shiftyjelly.pocketcasts.action.PAUSE

Stop playing the podcast episode.
au.com.shiftyjelly.pocketcasts.action.STOP

Play the next episode in the playlist.
au.com.shiftyjelly.pocketcasts.action.NEXT

Play the previous episode in the playlist.
au.com.shiftyjelly.pocketcasts.action.PREVIOUS

Jump forward x number of seconds.
au.com.shiftyjelly.pocketcasts.action.SKIP_FORWARD

Jump backward x number of seconds.
au.com.shiftyjelly.pocketcasts.action.SKIP_BACKWARD

Refresh podcast episodes and sync updates. This can be handy if you want to setup your auto downloads to trigger at a certain time.
au.com.shiftyjelly.pocketcasts.action.REFRESH_PODCASTS

** galaxy nexus

*** Roms

**** roms comparison

AOKP: customize nav bar with extra icona, flashlisht long press power
button, has toggles for status bar and batt %,fast charge usb
 APEX:fast charge usb,
 liquid: long press nav button control, fast torch (power button),nice
power menu options,toggled

*** Force galaxy nexus update

Follow these steps an you will be using the buttery goodness like me.
 -Go into Setting -> Apps -> All -> Google Services Framework
 -You will see a button for "Clear Data"; clear it.
 -Go into your dialer and type *#*#2432546#*#* - This will cause a
 'force checkin'. You will notice that it shows "checkin succeeded"
 across the top.
 Go back to Setting -> About Phone -> System updates and then click the
 check now button.
 YOU HAVE TO BE ON WIFI TO DOWNLOAD UPDATE!!!

** where are nanodroid backup stored

they are stored in the sdcard>clockwork mod folder>backups

** bacup custom rom

tasker
 simple calander widgets
 nova launcher

** use adb to install clockwork recovery

install adb on your system
 download the latest CW recovery for your specific device and put it on
the root of your internal SD card
 rename it recovery.img
 open a win cmd prompt
 enter :

adb shell

 gain root:

su

 enter:

dd if=/sdcard/recovery.img of=/dev/block/mmcblk0p18

 enter:

reboot recovery

  to go into recovery

** nc change andoid dpi

 1. Get Rom Toolbox Lite or Pro if you want to support awesome app
 2. Swipe to performance and press build.prop editor
 3. Now scroll down to ro.sf.lcd\_density
 4. Press on it and change the dpi to 160 dpi
 5. After doing that press ok and back out
 6. Reboot your Nexus 7 and enjoy some tablet ui goodness.

** Linux/ADB
*** setup arch to connect to android
﻿Getting SDK and IDE plugins

!Note: If you are running Arch64, you have to enable!
[[https://wiki.archlinux.org/index.php/Arch64_FAQ#Multilib_Repository_-_Multilib_Project]]
to be able to to install the required dependencies using PACMAN 

Install core SDK components from AUR

[[https://aur.archlinux.org/packages/android-sdk/][android-sdk]]

[[https://aur.archlinux.org/packages/android-sdk-platform-tools/][android-sdk-platform-tools]]

Typical installation location is /opt/android-sdk.

Make sure that your user is added to the group:

#+begin_src sh
gpasswd -a USERNAME adbusers
#+end_src

`Android Debug Bridge (ADB) - Connecting to a real device`

To get ADB to connect to a real device or phone under Arch, you must
make a [[https://wiki.archlinux.org/index.php/Udev][udev]] rules to
connect the device to the proper /dev/ entries:

Install the AUR package
[[https://aur.archlinux.org/packages/android-udev/][android-udev]] to  get a common list of vendor IDs. If [[https://wiki.archlinux.org/index.php/Android#Does_It_Work.3F][ADB recognizes your device]] (it is visible and accessible in IDE), you are
done. Otherwise see instructions below.

`Figure Out Your Device Ids`

Each Android device has a USB vendor/product ID. An example for HTC Evo
is:

 vendor id: 0bb4
 product id: 0c8d

Plug in your device and execute:

#+BEGIN_EXAMPLE
lsusb
#+END_EXAMPLE

It should come up something like this:
Bus 002 Device 006: ID 0bb4:0c8d High Tech Computer Corp.

`Adding udev Rules`

Use the rules from
[[http://source.android.com/source/initializing.html#configuring-usb-access][Android
developer]] or you can use the following template for your udev rules,
just replace [VENDOR ID] and [PRODUCT ID] with yours.
 Copy these rules into /etc/udev/rules.d/51-android.rules

or create your own:

 SUBSYSTEM=="usb", ATTR{idVendor}=="04e8", MODE="0666"

SUBSYSTEM=="usb",ATTR{idVendor}=="04e8",ATTR{idProduct}=="6860",SYMLINK+="android\_adb"

SUBSYSTEM=="usb",ATTR{idVendor}=="04e8",ATTR{idProduct}=="6860",SYMLINK+="android\_fastboot"

SUBSYSTEM=="usb",ATTR{idVendor}=="18d1",ATTR{idProduct}=="4e42",SYMLINK+="android\_adb",OWNER="zeltak"

SUBSYSTEM=="usb",ATTR{idVendor}=="18d1",ATTR{idProduct}=="4e42",SYMLINK+="android\_fastboot",OWNER="zeltak"

Then, to reload your new udev rules, execute:
 # udevadm control --reload-rules

Note: reloading udev rules under systemd should not be required, as any
rule changes should be picked up automatically.

 *Does It Work?*

After you have setup the udev rules, unplug your device and replug it.

After running:
 $ adb devices
 you should see something like:
 List of devices attached
 HT07VHL00676 device

 Troubleshooting:
  

If you do not have the *adb* program (usually available in
/opt/android-sdk/platform-tools/), it means you have not installed the
platform tools.

If you are getting an empty list (your device isn't there), it may be
because you have not enabled USB debugging on your device. You can do
that by going to Settings => Applications => Development and enabling
USB debugging.

If there are still problems such as adb displaying 
"???????? no permissions"

under devices, try restarting the adb server as root.

#+begin_src sh
adb kill-server
adb start-server
#+end_src

Pasted from [[https://wiki.archlinux.org/index.php/Android][https://wiki.archlinux.org/index.php/Android]]
*** transfer files from/to PC via usb (push/pull)
use the pull/push function in adb, ₆In example₆ 

start the adb server (as root)

#+BEGIN_SRC sh
sudo adb start-server 
#+END_SRC

#+BEGIN_EXAMPLE
daemon not running. starting it now on port 5037 *
daemon started successfully *
#+END_EXAMPLE

#+BEGIN_SRC sh
#to download (pull)from phone
adb pull /PATH/ON/PHONE /PATH/ON/PC
#to UL (push) to phone
adb push /PATH/ON/PHONE /PATH/ON/PC
#+END_SRC 

%Tip - look for the path using a FM on android, a recovery file manager etc to get the EXACT path you need%

'example procedure to recover/install rom'

#+BEGIN_SRC sh
sudo adb start-server 
adb -d push  /home/zeltak/ZH_tmp/and/cm-10.2-20131114-NIGHTLY-d2tmo.zip /external_sdcard/
#+END_SRC

** nexus 7
*** keycombo to boot into recovery/fastboot
    press vol up/down keys and power at same time
*** flash stock rom						       :@fav:

1.download the latest image (ROM) from google and extract it somewhere (make sure its the correct ROM for your device) 

For reference, there should be 4 files, named:

#+BEGIN_SRC emacs-lisp
bootloader-grouper-4.18.img
flash-all.sh
flash-base.sh
flash-all.bat
image-nakasi-jdq39.zip
#+END_SRC

2.Power down your tablet. Reboot into the bootloader by holding Volume Down + Power until you see the bootloader screen. In red letters toward the top of the text you will see fastboot mode. Once here, plug it into your computer.

Let's make sure you have your fastboot drivers installed and recognizing your device. Enter in the command prompt:

$Note- you may need sudo for all command below$ 

#+BEGIN_SRC sh
fastboot devices
#+END_SRC

@WARNING:if installed through AUR it wont be in PATH, its best to gain root (su) and then just cd to /opt/android-sdk/platform-tools/ and issue the ./fastboot manually IE:@
#+BEGIN_SRC sh
./fastboot devices
      
015d2994f257f805        fastboot
#+END_SRC

You should see "List of attached devices" Followed by a string of numbers. If you do not see this, you do not have your drivers installed correctly.

3.Type each of these lines followed by Enter between them, waiting for one to finish before moving on to the next:

#+BEGIN_SRC sh
fastboot erase boot
fastboot erase cache
fastboot erase recovery
fastboot erase system
fastboot erase userdata
#+END_SRC

4.This command will flash the stock bootloader on to your device. 

#+BEGIN_SRC sh
fastboot flash bootloader bootloader-grouper-4.18.img
#+END_SRC

@you may need to issue this- if command above says bootloader locked@
#+BEGIN_SRC sh
fastboot oem unlock
#+END_SRC
@you may need to issue this@


5.Now reboot the bootloader:
#+begin_src sh
fastboot reboot-bootloader
#+end_src

6.This next command will both wipe your old system and flash the factory image in its place, which includes the stock system, recovery, kernel, and userdata partitions:
#+begin_src sh
fastboot -w update image-nakasi-jdq39.zip
#+end_src
wait, make sure the command finishes. This might take a few minutes.

7.Reboot the bootloader again:

#+begin_src sh
fastboot reboot-bootloader
#+end_src

8.Now we're just going to lock that bootloader.
@this is optional and not needed if toy don't care about warrenty etc@
This step is optional but I strongly recommend it if you had issues earlier which led to this procedure. Now you can unlock again if you like, which will give your tablet that final full wipe to clear out any bad data remaining:
Code:
#+begin_src sh
fastboot oem lock
#+end_src

9.or to unlock
#+begin_src sh
fastboot oem unlock
#+end_src

10. Finally, reboot and setup your tablet again from scratch!

#+begin_src sh
fastboot reboot
#+end_src


** BUGS/ERRORS
*** Flashing ROM errors
**** How To Fix Status 7 Error
when toy get a error 7 when you try to flash a rom and it fails

#+DOWNLOADED: /tmp/screenshot.png @ 2013-11-15 10:56:17
#+attr_html: :width 300px
 [[~/org/attach/images_2013//screenshot_2013-11-15_10:56:17.png]]

!Before you begin make sure if you are installing the correct ROM for your device!

Step 1. Copy the ROM zip file to your computer and extract it using your favorite unzipping software.

Step 2. Once unzipped, browse to the META-INF/com/google/android directory. You will find two files called “update-binary” and “updater-script”.

Step 3. edit “updater-script” and get rid of the line starting with “assert” until the  next semi-colon.  Usually this is the first line or one of the first lines at the top of the text file.


#+DOWNLOADED: /tmp/screenshot.png @ 2013-11-15 11:00:38
#+attr_html: :width 300px
 [[~/org/attach/images_2013//screenshot_2013-11-15_11:00:38.png]] 

Step 5. Save file.

Step 7. Rezip all the files you’ve unzipped.

Step 8. Copy the new, edited zip file to your phone.

Step 9. Try re-installing ROM, now it should install fine without Status 7 error.

** MTP on linux
*** mtpfs arch
Mtpfs is FUSE filesystem that supports reading and writing from any MTP device. Basically it allows you to mount your device as an external drive.

Mtpfs can be installed with the packge mtpfs, available from the official repositories.

First edit your /etc/fuse.conf and uncomment the following line:

#+BEGIN_EXAMPLE
user_allow_other
#+END_EXAMPLE

To mount your device

#+BEGIN_SRC sh
$ mtpfs -o allow_other /media/YOURMOUNTPOINT
#+END_SRC

    To unmount your device

#+BEGIN_SRC sh
$ fusermount -u /media/YOURMOUNTPOINT
#+END_SRC

To unmount your device as root

#+BEGIN_SRC sh
umount /media/YOURMOUNTPOINT
#+END_SRC

Also, you can put them into your ~/.bashrc:

#+BEGIN_EXAMPLE
alias android-connect="mtpfs -o allow_other /media/YOURMOUNTPOINT"
alias android-disconnect="fusermount -u /media/YOURMOUNTPOINT"
#+END_EXAMPLE

Or, with sudo

#+BEGIN_EXAMPLE
alias android-disconnect="sudo umount -u /media/YOURMOUNTPOINT"
#+END_EXAMPLE

Note: if you want not be asked for password when using sudo, please refer to USB Storage Devices#Mounting USB devices
*** jmtpfs @this worked last time@
jmtpfs is a FUSE and libmtp based filesystem for accessing MTP (Media Transfer Protocol) devices. It was specifically designed for exchanging files between Linux systems and newer Android devices that support MTP but not USB Mass Storage. jmtpfs is available as jmtpfs in the AUR.
create a mount point like file:~/mtp

then use this commands to mount your device:

#+BEGIN_SRC sh
jmtpfs ~/mtp
#+END_SRC

And this command to unmount it:

#+BEGIN_SRC sh
fusermount -u ~/mtp
#+END_SRC

** fireTV
*** root fire TV
In order for the Fire TV to accept sideloaded apps, you must enable ADB Debugging. You may turn it back off once you’re done sideloading apps.

Download towelroot (tr.apk) by clicking the big red icon at towelroot.com
Download SuperSU apk from evozi.com
Sideload both APKs onto your Fire TV:
-adb connect IPADRESS
-adb install /PATH/TO/APK
₆In example₆ 
#+BEGIN_SRC sh
sudo adb connect 10.0.0.102       
adb install /home/zeltak/ZH_tmp/firetv/tr.apk    
#+END_SRC

Launch towelroot from your Fire TV application menu.
Press the select button on your remote to click the “make it ra1n” button in the towelroot app and wait for the Fire TV to reboot. With the new version of towelroot, the Fire TV does not need to restart.
Launch SuperSU
Update the SU binary if asked. Select the “normal” update method when asked.

Verify you have root access:
#+BEGIN_SRC sh
adb shell su 
#+END_SRC

You should see SuperSU ask you to grant ADB root access. Choose Grant.

It is recommended that you sideload and install BusyBox to ensure compatibility with future apps you install.
Download BusyBox using the evozi APK Downloader.
Launch BusyBox
Grant it root permission
Use the remotes back button to close the white information popup.
Select the “Install Busybox” tab and select “Install” to install Busybox
*** disable auto updates
Connect to your Fire TV via ADB
At the command line type: adb shell and hit enter
Then type: su and hit enter
(If this is the first time you’ve ever requested super user (su) from ADB, you will need to select “Grant” on a popup which will appear on your Fire TV. If the popup times out, you may safely repeat this step. Alternately, you can go into the settings of the SuperSU and set the app to grant su by default. In which case you will not need/get a popup on the Fire TV.)
Then type: pm disable com.amazon.dcp and hit enter
You should see the message: “Package com.amazon.dcp new state: disabled”
(If you instead see the word “Killed”, it means you have not gained super user (su) and need to go back and repeat step 3.)
Then type: exit and hit enter
Lastly, type: exit and hit enter again
*** Install XBMC to the Fire TV

Note: If your APK file name contains spaces, make sure you put quotes around it in the adb commands. On OS X and Linux, you may need to prepend ./ to the adb commands.

    On your host (PC or other Android device), download your desired XBMC APK
    Open a Command Prompt (Windows), Terminal (OS X/Linux), or Terminal Emulator app (Android)
    Navigate (CD) to the directory with your XBMC APK (In Terminal Emulator on Android you only need to run the adb commands)
    Run the following commands

#+BEGIN_SRC sh
  adb kill-server 
  adb start-server 
  adb connect <ip-address-of-fire-tv>
#ie:
adb connect 10.0.0.102
#+END_SRC

ADB is connected when it reports the message "connected to <ip-address-of-fire-tv>:<port>"
Run the following command

#+BEGIN_SRC sh
adb install <apk-file-name> 
#+END_SRC

Installation is complete when it reports the message "success" 

(Note: For Android you need to type in the full path. e.g. >adb install /sdcard/Download/apk-file-name.apk)
*** updgarde xbmc on fire tv
XBMC can be upgraded through ADB without losing your settings. To do this, you must use a newer version of the package already installed on the machine.
Download the package to your machine
Make sure ADB is connected to the Fire TV then install with the -r option to upgrade

#+BEGIN_SRC sh
adb connect 10.0.0.102
adb install -r <apk-file-name>
#+END_SRC

Installation is complete when it reports the message "Success" 

XBMC will still go through the "first run" screen the first time it is launched but your settings will remain intact.
** !issues!
*** phone keeps turning on at night
make sure daydream is OFF (find it under display)
